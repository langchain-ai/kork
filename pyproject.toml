[tool.poetry]
name = "kork"
version = "0.0.3"
description = "Natural Language Interfaces Powered by LLMs"
authors = ["LangChain"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/langchain-ai/kork"

[tool.poetry.dependencies]
python = "^3.8.1"
openai = ">=0.27"
langchain = ">=0.0.330"
lark = "^1.1.5"

[tool.poetry.group.dev.dependencies]
jupyterlab = "^3.6.1"

[tool.poetry.group.test.dependencies]
poethepoet = "^0.18.1"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
pytest-asyncio = "^0.21.1"
pytest-mock = "^3.11.1"
pytest-socket = "^0.6.0"
pytest-watch = "^4.2.0"
pytest-timeout = "^2.2.0"

[tool.poetry.group.lint.dependencies]
ruff = "^0.1.5"


[tool.poetry.group.docs.dependencies]
nbsphinx = "^0.8.9"
sphinx = "^4.5.0"
sphinx-autobuild = "^2021.3.14"
sphinx-design = "^0.4.1"
sphinx_book_theme = "^1.0.0"
myst-nb = "^0.17.1"
linkchecker = "^10.2.1"
toml = "^0.10.2"
sphinx-copybutton = "^0.5.1"

[tool.poetry.group.typing.dependencies]
mypy = "^1.7.0"

[tool.poetry.group.types.dependencies]
types-toml = "^0.10.8.5"

[tool.poe.tasks]
ruff = "ruff"
pytest.cmd = "py.test --durations=5 -W error::RuntimeWarning --cov --cov-config=.coveragerc --cov-report xml --cov-report term-missing:skip-covered"
mypy = "mypy . --pretty --show-error-codes"
fix = { shell = "poe ruff format . && poe ruff --select I --fix ." }
# Using a --preview feature. Commit your code prior to use this fix.
test = { shell = "poe ruff . && poe pytest && poe mypy" }
# Use to auto-generate docs
apidoc = "sphinx-apidoc -o docs/source/generated kork"

[tool.ruff]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
]
extend-include = ["*.ipynb"]

# Same as Black.
line-length = 88

[tool.ruff.extend-per-file-ignores]
"*.ipynb" = ["E402"]

[tool.mypy]
disallow_untyped_defs = "True"
ignore_missing_imports = "True"

[tool.coverage.run]
omit = [
    "tests/*",
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
addopts = "--strict-markers --strict-config --durations=5 -vv"
# Global timeout for all tests. There shuold be a good reason for a test to
# take more than 5 second
timeout = 5
